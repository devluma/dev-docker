version: '3.7'

services:
    nginx:
        container_name: ${COMPANY_NAME}_nginx
        build:
            context: nginx/
            args:
                - NGINX_HOST_APP_NAME=${APP_NAME}
                - NGINX_HOST_API_NAME=${API_NAME}
        volumes:
            - ${APPLICATION_HTDOCS}/${APP_NAME}:/var/www/html/app
            - ${APPLICATION_HTDOCS}/${API_NAME}:/var/www/html/api
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/conf.d
        ports:
            - "${NGINX_HOST_HTTP_APP_PORT}:80"
            - "${NGINX_HOST_HTTP_API_PORT}:8081"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        links:
            - laravel
        networks:
            - backend

    laravel:
        container_name: ${COMPANY_NAME}_laravel
        build:
            context: laravel/
            args:
                - INSTALL_GD=${PHP_FPM_INSTALL_GD}
                - INSTALL_COMPRESSION=${PHP_FPM_INSTALL_COMPRESSION}
                - INSTALL_FTP=${PHP_FPM_INSTALL_FTP}
                - INSTALL_MBSTRING=${PHP_FPM_INSTALL_MBSTRING}
                - INSTALL_MCRYPT=${PHP_FPM_INSTALL_MCRYPT}
                - INSTALL_PDO_MYSQL=${PHP_FPM_INSTALL_PDO_MYSQL}
                - INSTALL_PDO_POSTGRESQL=${PHP_FPM_INSTALL_PDO_POSTGRESQL}
                - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
                - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
                - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
                - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
                - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
                - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
                - INSTALL_JSON_XML=${PHP_FPM_INSTALL_JSON_XML}
                - INSTALL_CURL=${PHP_FPM_INSTALL_CURL}
                - INSTALL_OPENSSL=${PHP_FPM_INSTALL_OPENSSL}
                - INSTALL_COMPOSER=${PHP_FPM_INSTALL_COMPOSER}
                - PHP_FPM_PORT=${PHP_FPM_PORT}
                - PHP_FPM_ENV=${APPLICATION_ENV}
        volumes:
            - ${APPLICATION_HTDOCS}/${API_NAME}:/var/www/html/api
        expose:
            - "${PHP_FPM_PORT}"            
        links:
            - postgresql
        networks:
            - backend

    redis:
        container_name: ${COMPANY_NAME}_redis
        build:
            context: redis/
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - backend

    postgresql:
        container_name: ${COMPANY_NAME}_postgresql
        build:
            context: ./postgresql
            dockerfile: Dockerfile
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - postgres:/var/lib/postgresql/data
            - ${APPLICATION_HTDOCS}/${API_NAME}/database/seeds:/home/db
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - backend

networks:
    # frontend:
    #     driver: ${NETWORKS_DRIVER}
    backend:
        driver: ${NETWORKS_DRIVER}

volumes:
    postgres:
        driver: ${VOLUMES_DRIVER}